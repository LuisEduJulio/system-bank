// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_bank.infraestructure.Factory;

namespace api_bank.infraestructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231109161753_Database")]
    partial class Database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("api_bank.domain.Entities.BankEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreation")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDisabled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("api_bank.domain.Entities.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreation")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDisabled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankEntityId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("api_bank.domain.Entities.ExtractEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankEntityId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerEntityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreation")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDisabled")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Describe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EExtractType")
                        .HasColumnType("int");

                    b.Property<string>("Loose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BankEntityId");

                    b.HasIndex("CustomerEntityId");

                    b.ToTable("Extract");
                });

            modelBuilder.Entity("api_bank.domain.Entities.CustomerEntity", b =>
                {
                    b.HasOne("api_bank.domain.Entities.BankEntity", "BankEntity")
                        .WithMany("CustomerEntitys")
                        .HasForeignKey("BankEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankEntity");
                });

            modelBuilder.Entity("api_bank.domain.Entities.ExtractEntity", b =>
                {
                    b.HasOne("api_bank.domain.Entities.BankEntity", "BankEntity")
                        .WithMany("ExtractEntitys")
                        .HasForeignKey("BankEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_bank.domain.Entities.CustomerEntity", "CustomerEntity")
                        .WithMany("ExtractEntitys")
                        .HasForeignKey("CustomerEntityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BankEntity");

                    b.Navigation("CustomerEntity");
                });

            modelBuilder.Entity("api_bank.domain.Entities.BankEntity", b =>
                {
                    b.Navigation("CustomerEntitys");

                    b.Navigation("ExtractEntitys");
                });

            modelBuilder.Entity("api_bank.domain.Entities.CustomerEntity", b =>
                {
                    b.Navigation("ExtractEntitys");
                });
#pragma warning restore 612, 618
        }
    }
}
